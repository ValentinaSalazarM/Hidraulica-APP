##
import sympy as sym
import numpy as np
from matplotlib import pyplot as plt

Psv=sym.Symbol('Psv')
Ppv=sym.Symbol('Ppv')
Psa=sym.Symbol('Psa')
Ppa=sym.Symbol('Ppa')
Vsv=sym.Symbol('Vsv')
Vpv=sym.Symbol('Vpv')
Vsa=sym.Symbol('Vsa')
Vpa=sym.Symbol('Vpa')
Q=sym.Symbol('Q')
Kl=sym.Symbol('Kl')
Kr=sym.Symbol('Kr')
Rs=sym.Symbol('Rs')
Rp=sym.Symbol('Rp')
Vo=sym.Symbol('Vo')
Csv=sym.Symbol('Csv')
Cpv=sym.Symbol('Cpv')
Csa=sym.Symbol('Csa')
Cpa=sym.Symbol('Cpa')

Eq1=Q/Kr-Psv
Eq2=Q/Kl-Ppv
Eq3=Q/Kr+Rs*Q-Psa
Eq4=Q/Kl+Rp*Q-Ppa
Eq5=Csv*Q/Kr-Vsv
Eq6=Cpv*Q/Kl-Vpv
Eq7=(Csa/Kr+Csa*Rs)*Q-Vsa
Eq8=(Cpa/Kl+Cpa*Rp)*Q-Vpa
Eq9=Vsa+Vsv+Vpa+Vpv-Vo

sol=sym.linsolve([Eq1,Eq2,Eq3,Eq4,Eq5,Eq6,Eq7,Eq8,Eq9],(Vsa,Vsv,Vpa,Vpv,Psa,Psv,Ppa,Ppv,Q))
SOL=sol.args

VsaS=SOL[0][0]
VsvS=SOL[0][1]
VpaS=SOL[0][2]
VpvS=SOL[0][3]
PsaS=SOL[0][4]
PsvS=SOL[0][5]
PpaS=SOL[0][6]
PpvS=SOL[0][7]
QS=SOL[0][8]

Kl=1.12
Kr=2.8
Vo=5
Cpa=0.0066
Cpv=0.08
Csa=0.01
Csv=1.75
Rs=17.5
Rp=1.79

Qs=Kl*Kr*Vo/(Cpa*Kl*Kr*Rp + Cpa*Kr + Cpv*Kr + Csa*Kl*Kr*Rs + Csa*Kl + Csv*Kl)
Ppas=Kr*Vo*(Kl*Rp + 1)/(Cpa*Kl*Kr*Rp + Cpa*Kr + Cpv*Kr + Csa*Kl*Kr*Rs + Csa*Kl + Csv*Kl)
Ppvs=Kr*Vo/(Cpa*Kl*Kr*Rp + Cpa*Kr + Cpv*Kr + Csa*Kl*Kr*Rs + Csa*Kl + Csv*Kl)
Psvs=Kl*Vo/(Cpa*Kl*Kr*Rp + Cpa*Kr + Cpv*Kr + Csa*Kl*Kr*Rs + Csa*Kl + Csv*Kl)
Psas=Kl*Vo*(Kr*Rs + 1)/(Cpa*Kl*Kr*Rp + Cpa*Kr + Cpv*Kr + Csa*Kl*Kr*Rs + Csa*Kl + Csv*Kl)
Vpas=Cpa*Kr*Vo*(Kl*Rp + 1)/(Cpa*Kl*Kr*Rp + Cpa*Kr + Cpv*Kr + Csa*Kl*Kr*Rs + Csa*Kl + Csv*Kl)
Vpvs=Cpv*Kr*Vo/(Cpa*Kl*Kr*Rp + Cpa*Kr + Cpv*Kr + Csa*Kl*Kr*Rs + Csa*Kl + Csv*Kl)
Vsas=Csa*Kl*Vo*(Kr*Rs + 1)/(Cpa*Kl*Kr*Rp + Cpa*Kr + Cpv*Kr + Csa*Kl*Kr*Rs + Csa*Kl + Csv*Kl)
Vsvs=Csv*Kl*Vo/(Cpa*Kl*Kr*Rp + Cpa*Kr + Cpv*Kr + Csa*Kl*Kr*Rs + Csa*Kl + Csv*Kl)


##

def Intervalo(C):
    I = np.linspace(C * 0.9, C * 1.1, 100)
    return I

def flujo(Kl=1.12,Kr=2.8,Rs=15.5,Rp=1.79,Vo=5,Cpa=0.0066,Cpv=0.08,Csa=0.01,Csv=1.75):
    Qs=Kl*Kr*Vo/(Cpa*Kl*Kr*Rp+Cpa*Kr+Cpv*Kr+Csa*Kl*Kr*Rs+Csa*Kl+Csv*Kl)
    return Qs

I1=Intervalo(Vo)


plt.plot(I1,flujo(Vo=I1))
plt.title('Volumen total')
plt.xlabel('Volumen total [litros]')
plt.ylabel('Flujo [litros/min]')